// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.

import { APIResource } from '../core/resource';
import * as Shared from './shared';
import { InvoiceListItemsCursorPage } from './shared';
import { APIPromise } from '../core/api-promise';
import { CursorPage, type CursorPageParams, PagePromise } from '../core/pagination';
import { RequestOptions } from '../internal/request-options';
import { path } from '../internal/utils/path';

export class Invoices extends APIResource {
  /**
   * Creates an invoice
   *
   * Required permissions:
   *
   * - `invoice:create`
   * - `plan:basic:read`
   *
   * @example
   * ```ts
   * const invoice = await client.invoices.create({
   *   collection_method: 'send_invoice',
   *   company_id: 'biz_xxxxxxxxxxxxxx',
   *   due_date: 1701406800,
   *   plan: {},
   * });
   * ```
   */
  create(body: InvoiceCreateParams, options?: RequestOptions): APIPromise<InvoiceCreateResponse> {
    return this._client.post('/invoices', { body, ...options });
  }

  /**
   * Retrieves an invoice by ID or token
   *
   * Required permissions:
   *
   * - `invoice:basic:read`
   * - `plan:basic:read`
   *
   * @example
   * ```ts
   * const invoice = await client.invoices.retrieve(
   *   'inv_xxxxxxxxxxxxxx',
   * );
   * ```
   */
  retrieve(id: string, options?: RequestOptions): APIPromise<Shared.Invoice> {
    return this._client.get(path`/invoices/${id}`, options);
  }

  /**
   * Lists invoices
   *
   * Required permissions:
   *
   * - `invoice:basic:read`
   * - `plan:basic:read`
   *
   * @example
   * ```ts
   * // Automatically fetches more pages as needed.
   * for await (const invoiceListItem of client.invoices.list({
   *   company_id: 'biz_xxxxxxxxxxxxxx',
   * })) {
   *   // ...
   * }
   * ```
   */
  list(
    query: InvoiceListParams,
    options?: RequestOptions,
  ): PagePromise<InvoiceListItemsCursorPage, Shared.InvoiceListItem> {
    return this._client.getAPIList('/invoices', CursorPage<Shared.InvoiceListItem>, { query, ...options });
  }

  /**
   * Void an invoice
   *
   * Required permissions:
   *
   * - `invoice:update`
   *
   * @example
   * ```ts
   * const response = await client.invoices.void(
   *   'inv_xxxxxxxxxxxxxx',
   * );
   * ```
   */
  void(id: string, options?: RequestOptions): APIPromise<InvoiceVoidResponse> {
    return this._client.post(path`/invoices/${id}/void`, options);
  }
}

/**
 * Autogenerated return type of CreateInvoice.
 */
export interface InvoiceCreateResponse {
  /**
   * The ID of the checkout job that was created for this invoice.
   */
  checkout_job_id: string | null;

  /**
   * The invoice that was created for this invoice.
   */
  invoice: Shared.Invoice;
}

/**
 * Represents `true` or `false` values.
 */
export type InvoiceVoidResponse = boolean;

export interface InvoiceCreateParams {
  /**
   * The method of collection for this invoice. If using charge_automatically, you
   * must provide a payment_token.
   */
  collection_method: Shared.CollectionMethod;

  /**
   * The company ID to create this invoice for.
   */
  company_id: string;

  /**
   * The date the invoice is due, if applicable.
   */
  due_date: number;

  /**
   * The properties of the plan to create for this invoice.
   */
  plan: InvoiceCreateParams.Plan;

  /**
   * Whether or not to charge the customer a buyer fee.
   */
  charge_buyer_fee?: boolean | null;

  /**
   * The name of the customer to create this invoice for. This is required if you
   * want to create an invoice for a customer who does not have a member of your
   * company yet.
   */
  customer_name?: string | null;

  /**
   * The email address to create this invoice for. This is required if you want to
   * create an invoice for a user who does not have a member of your company yet.
   */
  email_address?: string | null;

  /**
   * The member ID to create this invoice for. Include this if you want to create an
   * invoice for an existing member. If you do not have a member ID, you must provide
   * an email_address and customer_name.
   */
  member_id?: string | null;

  /**
   * The payment token ID to use for this invoice. If using charge_automatically, you
   * must provide a payment_token.
   */
  payment_token_id?: string | null;

  /**
   * The properties of the access pass to create for this invoice. Include this if
   * you want to create an invoice for a new product.
   */
  product?: InvoiceCreateParams.Product | null;

  /**
   * The access pass ID to create this invoice for. Include this if you want to
   * create an invoice for an existing product.
   */
  product_id?: string | null;
}

export namespace InvoiceCreateParams {
  /**
   * The properties of the plan to create for this invoice.
   */
  export interface Plan {
    /**
     * The interval at which the plan charges (renewal plans).
     */
    billing_period?: number | null;

    /**
     * An array of custom field objects.
     */
    custom_fields?: Array<Plan.CustomField> | null;

    /**
     * The description of the plan.
     */
    description?: string | null;

    /**
     * The interval at which the plan charges (expiration plans).
     */
    expiration_days?: number | null;

    /**
     * An additional amount charged upon first purchase.
     */
    initial_price?: number | null;

    /**
     * A personal description or notes section for the business.
     */
    internal_notes?: string | null;

    /**
     * The type of plan that can be attached to an access pass
     */
    plan_type?: Shared.PlanType | null;

    /**
     * The methods of how a plan can be released.
     */
    release_method?: Shared.ReleaseMethod | null;

    /**
     * The amount the customer is charged every billing period.
     */
    renewal_price?: number | null;

    /**
     * The number of free trial days added before a renewal plan.
     */
    trial_period_days?: number | null;

    /**
     * Visibility of a resource
     */
    visibility?: Shared.Visibility | null;
  }

  export namespace Plan {
    export interface CustomField {
      /**
       * The type of the custom field.
       */
      field_type: 'text';

      /**
       * The name of the custom field.
       */
      name: string;

      /**
       * The ID of the custom field (if being updated)
       */
      id?: string | null;

      /**
       * The order of the field.
       */
      order?: number | null;

      /**
       * The placeholder value of the field.
       */
      placeholder?: string | null;

      /**
       * Whether or not the field is required.
       */
      required?: boolean | null;
    }
  }

  /**
   * The properties of the access pass to create for this invoice. Include this if
   * you want to create an invoice for a new product.
   */
  export interface Product {
    /**
     * The title of the access pass.
     */
    title: string;

    /**
     * The ID of the product tax code to apply to this access pass.
     */
    product_tax_code_id?: string | null;
  }
}

export interface InvoiceListParams extends CursorPageParams {
  /**
   * The ID of the company to list invoices for
   */
  company_id: string;

  /**
   * Returns the elements in the list that come before the specified cursor.
   */
  before?: string | null;

  /**
   * The direction of the sort.
   */
  direction?: Shared.Direction | null;

  /**
   * The filters to apply to the invoices
   */
  filters?: InvoiceListParams.Filters | null;

  /**
   * Returns the first _n_ elements from the list.
   */
  first?: number | null;

  /**
   * Returns the last _n_ elements from the list.
   */
  last?: number | null;

  /**
   * Which columns can be used to sort.
   */
  order?: 'id' | 'created_at' | 'due_date' | null;
}

export namespace InvoiceListParams {
  /**
   * The filters to apply to the invoices
   */
  export interface Filters {
    /**
     * The access pass IDs to filter the invoices by
     */
    access_pass_ids?: Array<string> | null;

    /**
     * The collection methods to filter the invoices by
     */
    collection_methods?: Array<Shared.CollectionMethod> | null;

    /**
     * The statuses to filter the invoices by
     */
    statuses?: Array<Shared.InvoiceStatus> | null;
  }
}

export declare namespace Invoices {
  export {
    type InvoiceCreateResponse as InvoiceCreateResponse,
    type InvoiceVoidResponse as InvoiceVoidResponse,
    type InvoiceCreateParams as InvoiceCreateParams,
    type InvoiceListParams as InvoiceListParams,
  };
}

export { type InvoiceListItemsCursorPage };
